@page "/"
@using taskui.Models;
@model IndexModel
@using Syncfusion.EJ2.RichTextEditor
@{
    ViewData["Title"] = "Home page";
}
<div class="white-bg-container">

    <p class="page-title">
        View Release
    </p>
    <div class="accordion mt-5 " id="accordionExample">

        @foreach (var result in Model.HeaderList)
        {
            string accordionClassName = "";
            string buttonClassName = "";
            if (Model.FirstHeader == result.HeaderId)
            {
                accordionClassName = "accordion-collapse collapse show";
                buttonClassName = "accordion-button display-header";
            }
            else
            {
                accordionClassName = "accordion-collapse collapse";
                buttonClassName = "accordion-button collapsed display-header";
            }

            @if (result.Detail.Count() != 0) //result.Detail.Count() != 0)
            {
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="@buttonClassName" type="button" data-bs-toggle="collapse" data-bs-target="#@result.HeaderId" aria-expanded="false" aria-controls="@result.HeaderId">
                            <b>@result.ReleaseName.ToUpper()</b>  - @result.ReleaseDate.ToString("yyyy-MM-dd")
                        </button>
                    </h2>
                    <div id="@result.HeaderId" class="@accordionClassName" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <div class="print-@result.HeaderId">
                                <p>@result.ShortDescription</p>
                                <p>@result.LongDescription</p>

                                <br />
                                <h5 class="text-success">Enhancements</h5>
                                <hr class="hr hr-blurry" />
                                <ul class="">
                                    @foreach (var detail in result.Detail)
                                    {
                                        if (detail.Type == 1)
                                        {
                                            <li class="">
                                                @detail.Name
                                                <div class="detail-description innerHTMLDesc">
                                                    @* &#8226; *@
                                                    @detail.Description
                                                </div>
                                            </li>
                                        }
                                    }
                                </ul>

                                <br />
                                <h5 class="text-danger">Bug Fixes</h5>
                                <hr class="hr hr-blurry" />
                                <ul class="">
                                    @foreach (var detail in result.Detail)
                                    {
                                        if (detail.Type == 2)
                                        {
                                            <li class="">
                                                @detail.Name 
                                                <div class="detail-description innerHTMLDesc">
                                                    @* &#8226; *@
                                                    @detail.Description
                                                </div>
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                            
                            <button data-pdfPrintReleaseDate="@result.ReleaseDate.ToString("yyyy-MM-dd")"
                                    data-pdfPrintID="@result.HeaderId"
                                    data-pdfPrintReleaseName="@result.ReleaseName"
                                    class="jsPDF-btn btn btn-outline-primary">
                                Download PDF
                            </button>

                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
@section scripts{
        <script>

        document.querySelectorAll(".jsPDF-btn").forEach(btn => {
            btn.addEventListener("click", (e) => {
                // get btn details
                const element = document.querySelector(`.print-${btn.dataset.pdfprintid}`);

                const div = document.createElement("div")

                div.innerHTML = `
                            <div class="d-flex justify-content-between align-items-center">
                                <img src='https://i.ibb.co/KLt38B1/logo.png' style="">
                                <div>
                                    <p class="move-left">Technical_Document</p>
                                    <p class="move-left up">${new Date().toLocaleDateString()}</p>
                                </div>
                            </div>
                            <h3 class="accordion-header mb-1 text-center">
                                        ${btn.dataset.pdfprintreleasename}
                            </h3>
                            <br />
                            <p>Date: ${btn.dataset.pdfprintreleasedate}</p>
                            ${element.innerHTML}
                        `
                //print pdf
                window.jsPDF = window.jspdf.jsPDF;

                const doc = new jsPDF()

                doc.html(div, {
                    callback: function (doc) {
                        // Save the PDF
                        doc.save(`${btn.dataset.pdfprintreleasename.replace(/[.,\/#!$%\^&\*;:{}=\-_`~()]/g, "")}`);
                    },
                    margin: [10, 10, 10, 10],
                    autoPaging: 'text',
                    x: 0,
                    y: 0,
                    width: 190, //target width in the PDF document
                    windowWidth: 820 //window width in CSS pixels
                });


            })
        })

        window.onload = function(){
            document.querySelectorAll(".innerHTMLDesc").forEach(des => {
                let div = des.innerHTML
                div = div.replace(/&gt;/g, ">")
                div = div.replace(/&lt;/g, "<")
                des.innerHTML = div.toString()
                console.log(des)
            })
        }
        /*
        document.getElementById('btntest').onclick = function () {
            // Get the Rich Text Editor instance
            var rte = document.getElementById("default").ej2_instances[0];

            // Get the content from the Rich Text Editor
            var content = rte.value;

            // Find all image elements in the content
            var images = rte.element.querySelectorAll("img");

            console.log(rte.value, images.length)
            if (images.length == 0){
                console.log(1)
            } else {
                console.log(12)
                //
            }

            // Asynchronously convert each image to Base64
            Promise.all(Array.from(images).map(async function (image) {
                var base64 = await getBase64FromImageUrl(image.src);
                content = content.replace(image.src, base64);

                console.log('value', content);
            })).then(function () {
                // Now you have the content with images in Base64 format
                // You can submit the 'content' variable to the server using AJAX or other methods.
                // For example, you can use jQuery AJAX to send the content to the server:
            });

            function getBase64FromImageUrl(url) {
                return new Promise(function (resolve, reject) {
                    var img = new Image();
                    img.crossOrigin = "Anonymous";
                    img.onload = function () {
                        var canvas = document.createElement("canvas");
                        canvas.width = img.width;
                        canvas.height = img.height;
                        var ctx = canvas.getContext("2d");
                        ctx.drawImage(img, 0, 0, img.width, img.height);
                        var base64 = canvas.toDataURL("image/png"); // You can also use "image/jpeg" for JPEG format
                        resolve(base64);
                    };
                    img.onerror = function () {
                        reject(new Error("Failed to load image"));
                    };
                    img.src = url;
                });
            }
        }*/

    </script>
}

<ejs-scripts></ejs-scripts>