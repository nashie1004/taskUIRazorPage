@page "/Create/{IncrementCount?}/{QueryString?}"
@model taskui.Pages.CreatePageModel
@using Syncfusion.EJ2.RichTextEditor

@{
    ViewData["Title"] = "Create Page";
}
<div class="white-bg-container">
    <p class="page-title">
        Fill up form
    </p>
    <form method="post">
        <div class="form-group mt-3">
            <label for="exampleInputEmail1">Release Number</label>
            <input name="releaseNameForm" value="Release number..." id="ReleaseName" type="text" class="form-control" placeholder="Release Number">
        </div>
        <div class="form-group mt-3">
            <label for="exampleInputPassword1">Release Date</label>
            <input name="releaseDateForm" value="@DateTime.Now.ToString("yyyy-MM-dd")" id="ReleaseDate" type="date" class="form-control" placeholder="Release Date">
        </div>
        <div class="form-group mt-3">
            <label for="exampleInputPassword1">Description</label>
            <input name="releaseShortDescriptionForm" value="Short description..." id="ShortDescription" type="text" class="form-control" placeholder="Short Description">
        </div>
        <div class="form-floating mt-4">
            <textarea name="releaseLongDescriptionForm" textcontent="test value here change this" id="LongDescription" 
                class="form-control" placeholder="Description here" style="height: 100px">Long description...
            </textarea>
            <label for="floatingTextarea2">Long Description</label>
        </div>
        <button type="submit" class="btn btn-dark mt-3 detailAddButton" id="" asp-page-handler="AddButton">Add a detail</button>
        @if (Model.IncrementCount > 0)
        {
            <button type="submit" class="btn btn-danger mt-3 detailAddButton" id="" asp-page-handler="RemoveButton">Remove a detail</button>
        }

        @*
            @if (Model.IncrementCount != 0)
            {
                <a class="btn btn-danger mt-3" href="/Create/reduceDetailCount">Remove a detail</a>
            }
        *@
    </form>

    <script>
        let rteObj

        function created(){
            rteObj = this;
            rteObj.insertImageSettings.saveFormat = 'Base64';
        }

        const releaseNumberInput = document.querySelector("#ReleaseName")
        const releaseDateInput = document.querySelector("#ReleaseDate")
        const releaseShortDescriptionInput = document.querySelector("#ShortDescription")
        const releaseLongDescriptionInput = document.querySelector("#LongDescription")

        document.querySelectorAll(".detailAddButton").forEach(detailButton => {
            detailButton.addEventListener("click", () => {
                //
                const saveInfo = {
                    releaseNumber: releaseNumberInput.value,
                    releaseDate: releaseDateInput.value,
                    releaseShortDescription: releaseShortDescriptionInput.value,
                    releaseLongDescription: releaseLongDescriptionInput.value
                }

                localStorage.setItem('loadInfo', JSON.stringify(saveInfo));

            })
        })

        window.onload = function(){
            if (localStorage.getItem("loadInfo") === null){
                console.log('no item 1')
                releaseNumberInput.value = "";
                //releaseDateInput.value = getItem.releaseDate;
                releaseShortDescriptionInput.value = "";
                releaseLongDescriptionInput.value = "";

            } else {
                console.log('exsits')
                const getItem = JSON.parse(localStorage.getItem("loadInfo"));
                
                releaseNumberInput.value = getItem.releaseNumber;
                releaseDateInput.value = getItem.releaseDate;
                releaseShortDescriptionInput.value = getItem.releaseShortDescription;
                releaseLongDescriptionInput.value = getItem.releaseLongDescription;
            }
        }

        /*
        if (localStorage.getItem("loadInfo") === null){
            console.log("no item")

            const saveInfo = {
                releaseNumber: releaseNumber.value, 
                releaseDate: releaseDate.value, 
                releaseShortDescription: releaseShortDescription.value, 
                releaseLongDescription: releaseLongDescription.value
            }

            localStorage.setItem('loadInfo', JSON.stringify(saveInfo));

        } else {
            const getItem = JSON.parse(localStorage.getItem("loadInfo"));

            releaseNumber.value = getItem.releaseNumber;
            releaseDate.value = getItem.releaseDate;
            releaseShortDescription.value = getItem.releaseShortDescription;
            releaseLongDescription.value = getItem.releaseLongDescription;

            localStorage.removeItem("loadInfo")
        }*/
    </script>

    @for (int i = 0; i < Model.IncrementCount; i++)
    {
        string defaultString = $"default-{i}";
        <div class="mt-3 RTE-container">
            <div class="input-group mb-3">
                <span class="input-group-text">@(i + 1)</span>
                <select class="form-select selectedTypeSelect" aria-label="Default select example">
                    <option selected value="1">Enhancement</option>
                    <option value="2">Bug Fix</option>
                </select>
                <input value="Detail title here..." type="text" class="form-control detailNameInput" placeholder="Detail Title" aria-label="Username">
            </div>
            <ejs-richtexteditor created="created" id="@defaultString" value="Detail Description here...">
            </ejs-richtexteditor>
        </div>
    }
    @if (Model.IncrementCount > 0)
    {
       <button id="submitBtn" data-btnType="createBtnSubmit" class="btn btn-primary mt-3">Submit</button>
    }
</div>

<ejs-scripts></ejs-scripts>